#Parameters
#   arr-> array of integers which are positive, negative or equal to zero
#Ouput
#   Prints to console the ratio of positive numbers to total number of elements in array followed by the similar ratio for the negative numbers and the zero-integers
def plusMinus(arr):
    pos=0
    neg=0
    zer=0
    for i in arr:
        if i<0:
            neg+=1
        elif i==0:
            zer+=1
        else:
            pos+=1
    print("{:.6f}".format(float(pos/(pos+zer+neg))))
    print("{:.6f}".format(float(neg/(pos+zer+neg))))
    print("{:.6f}".format(float(zer/(pos+zer+neg))))

#Parameters
#   arr-> array of integers of size 5
#Output
#   Prints the sum of all integers in the array without the maximum integer and the sum of all the integers in the array without the minimum integer seperated by a space character
def miniMaxSum(arr):
    min=arr[0]
    max=arr[0]
    sum=0
    for i in arr:
        if i<min:
            min=i
        if i>max:
            max=i
        sum+=i
    print(str((sum-max)) + " " + str((sum-min)))

#Parameters
#   s-> String representing a time stamp in the AM/PM format
#Output
#   Converts timestamp from AM/PM format to military time (24-hour clock) and returns it as a string
def timeConversion(s):
    if s[8]=='P':
        if int(s[0:2])==12:
            return s[0:8]
        return str(int(s[0:2])+12)+s[2:8]
    else:
        if int(s[0:2])==12:
            return "00"+s[2:8]
        return s[0:8]

#Parameters
#   a-> list of integers
#Output
#   Returns any integer that appears an odd number of times in a
def lonelyinteger(a):
    l=[]
    for i in a:
        if i in l:
            l.remove(i)
        else:
            l.append(i)
    return l[0]




#Parameters
#   arr-> list of integers
#Output
#   Returns the sum of the diagnal elements in the two dimensional array on the diagonal starting at (0,0) and ending at (n.n) where n is the length of the array on a side
def get_first(arr):
    sum=0
    for i in range(len(arr)):
        sum+=arr[i][i]
    return sum
#Parameters
#   arr-> list of integers
#Output
#   Returns the sum of the diagnal elements in the two dimensional array on the diagonal starting at (0,n) and ending at (n.0) where n is the length of the array on a side
def get_second(arr):
    sum=0
    for i in range(len(arr)):
        sum+=arr[i][(len(arr)-1)-i]
    return sum
#Parameters
#   arr-> list of integers
#Output
#   Returns the absolute difference of the sums of diagonal from (0,0) to (n,n) and (0,n) to (n,0)
def diagonalDifference(arr):
    return abs(get_first(arr)-get_second(arr))

#class called Person which has a variable age which can be incremented by one with yearPasses(self) function. Can check the age status with the amIOld(self) function.
class Person:
    def __init__(self,initialAge):
        self.age=initialAge
    def amIOld(self):
        if self.age<0:
            print("Age is not valid, setting age to 0.")
            self.age=0
        if self.age<13:
            print("You are young.")
        elif self.age<18:
            print("You are a teenager.")
        else:
            print("You are old.")
    def yearPasses(self):
        self.age+=1
